Experimento: N=10000, M=100, Função: hash_func1
Resultados: {'N': 10000, 'M': 100, 'funcao': 'hash_func1', 'colisoes_media': 9940.8, 'colisoes_dp': 0.7483314773547883, 'tempo_insercao_medio': 0.09418740272521972, 'tempo_insercao_dp': 0.001573729647817399, 'tempo_busca_medio': 0.0014787673950195312, 'tempo_busca_dp': 7.025068873623859e-05, 'iteracoes_busca_media': 160.576, 'iteracoes_busca_dp': 3.1967833833401977, 'memoria_pico_media_MB': 0.535797119140625, 'cpu_time_medio': 0.0916998, 'load_factor': 100.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(10000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=10000, M=100, Função: hash_func2
Resultados: {'N': 10000, 'M': 100, 'funcao': 'hash_func2', 'colisoes_media': 9900, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 0.26259284019470214, 'tempo_insercao_dp': 0.04007194710147418, 'tempo_busca_medio': 0.0009276866912841797, 'tempo_busca_dp': 0.0001433021409773716, 'iteracoes_busca_media': 52.948, 'iteracoes_busca_dp': 2.429101891646376, 'memoria_pico_media_MB': 0.53466796875, 'cpu_time_medio': 0.23350280000000018, 'load_factor': 100.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(10000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=10000, M=100, Função: hash_func3
Resultados: {'N': 10000, 'M': 100, 'funcao': 'hash_func3', 'colisoes_media': 9900, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 0.057171201705932616, 'tempo_insercao_dp': 0.005016298775811617, 'tempo_busca_medio': 0.0006941795349121094, 'tempo_busca_dp': 0.00017914858973446744, 'iteracoes_busca_media': 48.114000000000004, 'iteracoes_busca_dp': 1.7859070524526195, 'memoria_pico_media_MB': 0.5351654052734375, 'cpu_time_medio': 0.054976000000000004, 'load_factor': 100.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(10000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=10000, M=1000, Função: hash_func1
Resultados: {'N': 10000, 'M': 1000, 'funcao': 'hash_func1', 'colisoes_media': 9940, 'colisoes_dp': 2.6076809620810595, 'tempo_insercao_medio': 0.1143488883972168, 'tempo_insercao_dp': 0.007792103452497813, 'tempo_busca_medio': 0.0024139404296875, 'tempo_busca_dp': 0.0007846160542569284, 'iteracoes_busca_media': 157.32, 'iteracoes_busca_dp': 15.259988204451533, 'memoria_pico_media_MB': 0.5897476196289062, 'cpu_time_medio': 0.10930180000000025, 'load_factor': 10.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(10000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=10000, M=1000, Função: hash_func2
Resultados: {'N': 10000, 'M': 1000, 'funcao': 'hash_func2', 'colisoes_media': 9000, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 0.4040193557739258, 'tempo_insercao_dp': 0.07175316420019354, 'tempo_busca_medio': 0.0006681442260742188, 'tempo_busca_dp': 0.0006793672144151777, 'iteracoes_busca_media': 6.109999999999999, 'iteracoes_busca_dp': 0.1608726204175217, 'memoria_pico_media_MB': 0.6115676879882812, 'cpu_time_medio': 0.33697099999999997, 'load_factor': 10.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(10000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=10000, M=1000, Função: hash_func3
Resultados: {'N': 10000, 'M': 1000, 'funcao': 'hash_func3', 'colisoes_media': 9000, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 0.08398475646972656, 'tempo_insercao_dp': 0.02155325623451874, 'tempo_busca_medio': 0.0001918315887451172, 'tempo_busca_dp': 2.006833068208662e-05, 'iteracoes_busca_media': 5.83, 'iteracoes_busca_dp': 0.2853769437077917, 'memoria_pico_media_MB': 0.6099136352539063, 'cpu_time_medio': 0.07432459999999974, 'load_factor': 10.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(10000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=10000, M=5000, Função: hash_func1
Resultados: {'N': 10000, 'M': 5000, 'funcao': 'hash_func1', 'colisoes_media': 9940.6, 'colisoes_dp': 1.8547236990991407, 'tempo_insercao_medio': 0.13181014060974122, 'tempo_insercao_dp': 0.015648690962443156, 'tempo_busca_medio': 0.0019325733184814454, 'tempo_busca_dp': 0.00031844520655100296, 'iteracoes_busca_media': 164.928, 'iteracoes_busca_dp': 9.904819836826922, 'memoria_pico_media_MB': 0.835882568359375, 'cpu_time_medio': 0.12171399999999988, 'load_factor': 2.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(10000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=10000, M=5000, Função: hash_func2
Resultados: {'N': 10000, 'M': 5000, 'funcao': 'hash_func2', 'colisoes_media': 5693, 'colisoes_dp': 15.006665185843255, 'tempo_insercao_medio': 0.3611027240753174, 'tempo_insercao_dp': 0.02145513798457494, 'tempo_busca_medio': 0.00022759437561035157, 'tempo_busca_dp': 1.8327303014499132e-05, 'iteracoes_busca_media': 2.122, 'iteracoes_busca_dp': 0.09620810776644559, 'memoria_pico_media_MB': 0.8930206298828125, 'cpu_time_medio': 0.3359831999999997, 'load_factor': 2.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(10000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=10000, M=5000, Função: hash_func3
Resultados: {'N': 10000, 'M': 5000, 'funcao': 'hash_func3', 'colisoes_media': 5646, 'colisoes_dp': 22.172054483064937, 'tempo_insercao_medio': 0.08572378158569335, 'tempo_insercao_dp': 0.01398057961041564, 'tempo_busca_medio': 0.00013456344604492187, 'tempo_busca_dp': 5.421284099527729e-06, 'iteracoes_busca_media': 1.8639999999999999, 'iteracoes_busca_dp': 0.13544002362669613, 'memoria_pico_media_MB': 0.8941558837890625, 'cpu_time_medio': 0.07842480000000016, 'load_factor': 2.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(10000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=50000, M=100, Função: hash_func1
Resultados: {'N': 50000, 'M': 100, 'funcao': 'hash_func1', 'colisoes_media': 49935, 'colisoes_dp': 1.6733200530681511, 'tempo_insercao_medio': 0.546578311920166, 'tempo_insercao_dp': 0.03824091706892508, 'tempo_busca_medio': 0.06973695755004883, 'tempo_busca_dp': 0.01428218276877979, 'iteracoes_busca_media': 807.1348, 'iteracoes_busca_dp': 40.59123041446269, 'memoria_pico_media_MB': 2.99439697265625, 'cpu_time_medio': 0.5183675999999998, 'load_factor': 500.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(50000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=50000, M=100, Função: hash_func2
Resultados: {'N': 50000, 'M': 100, 'funcao': 'hash_func2', 'colisoes_media': 49900, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 1.22568998336792, 'tempo_insercao_dp': 0.03238847938968225, 'tempo_busca_medio': 0.022942018508911134, 'tempo_busca_dp': 0.0018711532311458414, 'iteracoes_busca_media': 253.002, 'iteracoes_busca_dp': 7.480158287095257, 'memoria_pico_media_MB': 2.9975189208984374, 'cpu_time_medio': 1.1762876000000002, 'load_factor': 500.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(50000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=50000, M=100, Função: hash_func3
Resultados: {'N': 50000, 'M': 100, 'funcao': 'hash_func3', 'colisoes_media': 49900, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 0.3600735664367676, 'tempo_insercao_dp': 0.020943924571184422, 'tempo_busca_medio': 0.02243838310241699, 'tempo_busca_dp': 0.0021170853514624957, 'iteracoes_busca_media': 249.0668, 'iteracoes_busca_dp': 3.669094405980853, 'memoria_pico_media_MB': 2.9972930908203126, 'cpu_time_medio': 0.3443947999999999, 'load_factor': 500.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(50000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=50000, M=1000, Função: hash_func1
Resultados: {'N': 50000, 'M': 1000, 'funcao': 'hash_func1', 'colisoes_media': 49934.6, 'colisoes_dp': 1.624807680927192, 'tempo_insercao_medio': 1.0082882404327393, 'tempo_insercao_dp': 0.20454167027102182, 'tempo_busca_medio': 0.10856060981750489, 'tempo_busca_dp': 0.0442007272450831, 'iteracoes_busca_media': 823.7923999999999, 'iteracoes_busca_dp': 31.278065551437173, 'memoria_pico_media_MB': 3.051971435546875, 'cpu_time_medio': 0.7021727999999996, 'load_factor': 50.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(50000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=50000, M=1000, Função: hash_func2
Resultados: {'N': 50000, 'M': 1000, 'funcao': 'hash_func2', 'colisoes_media': 49000, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 2.8725537776947023, 'tempo_insercao_dp': 0.6788664258019489, 'tempo_busca_medio': 0.005919456481933594, 'tempo_busca_dp': 0.0020434037941998206, 'iteracoes_busca_media': 25.848, 'iteracoes_busca_dp': 0.4374891998666936, 'memoria_pico_media_MB': 3.0696334838867188, 'cpu_time_medio': 2.014263000000001, 'load_factor': 50.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(50000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=50000, M=1000, Função: hash_func3
Resultados: {'N': 50000, 'M': 1000, 'funcao': 'hash_func3', 'colisoes_media': 49000, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 0.6070726394653321, 'tempo_insercao_dp': 0.10856108858973904, 'tempo_busca_medio': 0.00697021484375, 'tempo_busca_dp': 0.0031078324166338212, 'iteracoes_busca_media': 26.588, 'iteracoes_busca_dp': 0.5947113585597645, 'memoria_pico_media_MB': 3.06954345703125, 'cpu_time_medio': 0.4668112000000022, 'load_factor': 50.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(50000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=50000, M=5000, Função: hash_func1
Resultados: {'N': 50000, 'M': 5000, 'funcao': 'hash_func1', 'colisoes_media': 49935.4, 'colisoes_dp': 1.4966629547095767, 'tempo_insercao_medio': 2.0050376892089843, 'tempo_insercao_dp': 1.2826177493858661, 'tempo_busca_medio': 0.10032401084899903, 'tempo_busca_dp': 0.018548341386711298, 'iteracoes_busca_media': 814.9368, 'iteracoes_busca_dp': 24.994658936660855, 'memoria_pico_media_MB': 3.2965087890625, 'cpu_time_medio': 0.8044867999999994, 'load_factor': 10.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(50000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=50000, M=5000, Função: hash_func2
Resultados: {'N': 50000, 'M': 5000, 'funcao': 'hash_func2', 'colisoes_media': 45000.2, 'colisoes_dp': 0.4, 'tempo_insercao_medio': 3.250308704376221, 'tempo_insercao_dp': 0.9573893452140818, 'tempo_busca_medio': 0.00263361930847168, 'tempo_busca_dp': 0.001267471246527625, 'iteracoes_busca_media': 6.044, 'iteracoes_busca_dp': 0.1419408327437879, 'memoria_pico_media_MB': 3.40433349609375, 'cpu_time_medio': 2.0834939999999973, 'load_factor': 10.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(50000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=50000, M=5000, Função: hash_func3
Resultados: {'N': 50000, 'M': 5000, 'funcao': 'hash_func3', 'colisoes_media': 45000, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 1.0271920204162597, 'tempo_insercao_dp': 0.7108099633794609, 'tempo_busca_medio': 0.0014323711395263672, 'tempo_busca_dp': 0.00028216551866671637, 'iteracoes_busca_media': 5.8608, 'iteracoes_busca_dp': 0.10186736474455388, 'memoria_pico_media_MB': 3.4042633056640623, 'cpu_time_medio': 0.5257431999999966, 'load_factor': 10.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(50000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=100000, M=100, Função: hash_func1
Resultados: {'N': 100000, 'M': 100, 'funcao': 'hash_func1', 'colisoes_media': 99933.2, 'colisoes_dp': 2.039607805437114, 'tempo_insercao_medio': 2.831292486190796, 'tempo_insercao_dp': 0.9645379682588346, 'tempo_busca_medio': 0.519517183303833, 'tempo_busca_dp': 0.20122426047275513, 'iteracoes_busca_media': 1600.2028, 'iteracoes_busca_dp': 68.61773737861081, 'memoria_pico_media_MB': 6.068804931640625, 'cpu_time_medio': 1.4141909999999995, 'load_factor': 1000.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(100000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=100000, M=100, Função: hash_func2
Resultados: {'N': 100000, 'M': 100, 'funcao': 'hash_func2', 'colisoes_media': 99900, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 5.413801527023315, 'tempo_insercao_dp': 1.6590680889126137, 'tempo_busca_medio': 0.16473183631896973, 'tempo_busca_dp': 0.05723581874005726, 'iteracoes_busca_media': 508.1578, 'iteracoes_busca_dp': 7.321294705173401, 'memoria_pico_media_MB': 6.080953979492188, 'cpu_time_medio': 3.069759399999998, 'load_factor': 1000.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(100000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=100000, M=100, Função: hash_func3
Resultados: {'N': 100000, 'M': 100, 'funcao': 'hash_func3', 'colisoes_media': 99900, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 0.9221282005310059, 'tempo_insercao_dp': 0.1338260212709939, 'tempo_busca_medio': 0.15515308380126952, 'tempo_busca_dp': 0.08652330322743594, 'iteracoes_busca_media': 503.3526, 'iteracoes_busca_dp': 3.0825118069522297, 'memoria_pico_media_MB': 6.080827331542968, 'cpu_time_medio': 0.8086186000000055, 'load_factor': 1000.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(100000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=100000, M=1000, Função: hash_func1
Resultados: {'N': 100000, 'M': 1000, 'funcao': 'hash_func1', 'colisoes_media': 99934.6, 'colisoes_dp': 0.4898979485566356, 'tempo_insercao_medio': 1.5356049537658691, 'tempo_insercao_dp': 0.27261071496004635, 'tempo_busca_medio': 0.39265642166137693, 'tempo_busca_dp': 0.044819314091639924, 'iteracoes_busca_media': 1640.9152, 'iteracoes_busca_dp': 30.47432492705952, 'memoria_pico_media_MB': 6.1256103515625, 'cpu_time_medio': 1.3245351999999997, 'load_factor': 100.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(100000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=100000, M=1000, Função: hash_func2
Resultados: {'N': 100000, 'M': 1000, 'funcao': 'hash_func2', 'colisoes_media': 99000, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 4.1625903129577635, 'tempo_insercao_dp': 0.540483707161122, 'tempo_busca_medio': 0.019527626037597657, 'tempo_busca_dp': 0.00533319448346367, 'iteracoes_busca_media': 51.0624, 'iteracoes_busca_dp': 0.5550861554749851, 'memoria_pico_media_MB': 6.142503356933593, 'cpu_time_medio': 3.5778158000000078, 'load_factor': 100.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(100000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=100000, M=1000, Função: hash_func3
Resultados: {'N': 100000, 'M': 1000, 'funcao': 'hash_func3', 'colisoes_media': 99000, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 0.944054126739502, 'tempo_insercao_dp': 0.043887968331025436, 'tempo_busca_medio': 0.014287233352661133, 'tempo_busca_dp': 0.00264485629323197, 'iteracoes_busca_media': 50.9948, 'iteracoes_busca_dp': 1.0733594738017649, 'memoria_pico_media_MB': 6.142845153808594, 'cpu_time_medio': 0.855917599999998, 'load_factor': 100.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(100000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=100000, M=5000, Função: hash_func1
Resultados: {'N': 100000, 'M': 5000, 'funcao': 'hash_func1', 'colisoes_media': 99933, 'colisoes_dp': 1.0954451150103321, 'tempo_insercao_medio': 2.607061195373535, 'tempo_insercao_dp': 1.3967069581560474, 'tempo_busca_medio': 0.5129776477813721, 'tempo_busca_dp': 0.11203108721094103, 'iteracoes_busca_media': 1645.9626, 'iteracoes_busca_dp': 21.489403533835002, 'memoria_pico_media_MB': 6.367889404296875, 'cpu_time_medio': 1.4629800000000046, 'load_factor': 20.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(100000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=100000, M=5000, Função: hash_func2
Resultados: {'N': 100000, 'M': 5000, 'funcao': 'hash_func2', 'colisoes_media': 95000, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 5.285757112503052, 'tempo_insercao_dp': 0.9680381908836481, 'tempo_busca_medio': 0.006187820434570312, 'tempo_busca_dp': 0.0026214891212549035, 'iteracoes_busca_media': 10.985, 'iteracoes_busca_dp': 0.17596590578859342, 'memoria_pico_media_MB': 6.458937072753907, 'cpu_time_medio': 3.8151698000000067, 'load_factor': 20.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(100000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

Experimento: N=100000, M=5000, Função: hash_func3
Resultados: {'N': 100000, 'M': 5000, 'funcao': 'hash_func3', 'colisoes_media': 95000, 'colisoes_dp': 0.0, 'tempo_insercao_medio': 0.995638656616211, 'tempo_insercao_dp': 0.047012933194044905, 'tempo_busca_medio': 0.0037683486938476563, 'tempo_busca_dp': 0.0003130115287784836, 'iteracoes_busca_media': 11.0618, 'iteracoes_busca_dp': 0.24439918166802435, 'memoria_pico_media_MB': 6.459037780761719, 'cpu_time_medio': 0.9149237999999968, 'load_factor': 20.0}
--- Análise Assintótica (Notação Big-O) ---
  Melhor caso (inserção/busca): O(1)
  Pior caso (inserção/busca): O(100000)
  Caso médio (inserção/busca): O(1 + N/M)
Onde N/M é o fator de carga e representa o tamanho médio de cada lista (bucket).
Se a função hash for boa, espera-se uma performance próxima de O(1).

